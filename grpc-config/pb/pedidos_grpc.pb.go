// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v5.26.1
// source: pedidos.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	PedidoService_ListarPedidos_FullMethodName = "/PedidoService/ListarPedidos"
)

// PedidoServiceClient is the client API for PedidoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PedidoServiceClient interface {
	ListarPedidos(ctx context.Context, in *ListarPedidosRequest, opts ...grpc.CallOption) (*ListarPedidosResponse, error)
}

type pedidoServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPedidoServiceClient(cc grpc.ClientConnInterface) PedidoServiceClient {
	return &pedidoServiceClient{cc}
}

func (c *pedidoServiceClient) ListarPedidos(ctx context.Context, in *ListarPedidosRequest, opts ...grpc.CallOption) (*ListarPedidosResponse, error) {
	out := new(ListarPedidosResponse)
	err := c.cc.Invoke(ctx, PedidoService_ListarPedidos_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PedidoServiceServer is the server API for PedidoService service.
// All implementations must embed UnimplementedPedidoServiceServer
// for forward compatibility
type PedidoServiceServer interface {
	ListarPedidos(context.Context, *ListarPedidosRequest) (*ListarPedidosResponse, error)
	mustEmbedUnimplementedPedidoServiceServer()
}

// UnimplementedPedidoServiceServer must be embedded to have forward compatible implementations.
type UnimplementedPedidoServiceServer struct {
}

func (UnimplementedPedidoServiceServer) ListarPedidos(context.Context, *ListarPedidosRequest) (*ListarPedidosResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListarPedidos not implemented")
}
func (UnimplementedPedidoServiceServer) mustEmbedUnimplementedPedidoServiceServer() {}

// UnsafePedidoServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PedidoServiceServer will
// result in compilation errors.
type UnsafePedidoServiceServer interface {
	mustEmbedUnimplementedPedidoServiceServer()
}

func RegisterPedidoServiceServer(s grpc.ServiceRegistrar, srv PedidoServiceServer) {
	s.RegisterService(&PedidoService_ServiceDesc, srv)
}

func _PedidoService_ListarPedidos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListarPedidosRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PedidoServiceServer).ListarPedidos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PedidoService_ListarPedidos_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PedidoServiceServer).ListarPedidos(ctx, req.(*ListarPedidosRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// PedidoService_ServiceDesc is the grpc.ServiceDesc for PedidoService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PedidoService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "PedidoService",
	HandlerType: (*PedidoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListarPedidos",
			Handler:    _PedidoService_ListarPedidos_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pedidos.proto",
}
